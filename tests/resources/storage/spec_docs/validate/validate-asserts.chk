---
version: default:validation:0.7.2

variables:
  response:
    int: 200
    float: 200.23

data:
  code: 200

asserts:
  - type: Equal
    actual: "{{ response.int }}"
    expected: 200

  - type: Equal
    actual: "{{ response.float }}"
    expected: 200.23

  - type: Equal
    actual: "[ 1, 2, 3 ]"
    expected: [ 1, 2, 3 ]
    cast_actual_to: list

  - type: Equal
    actual: "{'a': 1, 'c': 3, 'b': 2}"
    expected: { 'a': 1, 'c': 3, 'b': 2 }
    cast_actual_to: dict

  - type: Equal
    actual: "False"
    expected: False
    cast_actual_to: bool

  - type: Equal
    actual: "False"
    expected: False
    cast_actual_to: auto

  - type: NotEqual
    actual: "False"
    expected: False

  - { type: Empty, actual: ~ }
  - { type: NotEmpty, actual: 2 }

  - { type: Accepted, actual: 2 }
  - { type: Accepted, actual: "Yes" }
  - { type: Accepted, actual: "YES" }
  - { type: Accepted, actual: "yes" }
  - { type: Accepted, actual: 1 }
  - { type: Accepted, actual: "On" }
  - { type: Accepted, actual: "ON" }
  - { type: Accepted, actual: "on" }
  - { type: Accepted, actual: True }
  - { type: Accepted, actual: "True" }
  - { type: Accepted, actual: "TRUE" }
  - { type: Accepted, actual: "true" }

  - { type: Declined, actual: 2 }
  - { type: Declined, actual: "No" }
  - { type: Declined, actual: "NO" }
  - { type: Declined, actual: "no" }
  - { type: Declined, actual: 0 }
  - { type: Declined, actual: "Off" }
  - { type: Declined, actual: "OFF" }
  - { type: Declined, actual: "off" }
  - { type: Declined, actual: False }
  - { type: Declined, actual: "False" }
  - { type: Declined, actual: "FALSE" }
  - { type: Declined, actual: "false" }

  - { type: Boolean, actual: 2 }
  - { type: Boolean, actual: True }
  - { type: Boolean, actual: "true", cast_actual_to: bool }
  - { type: Boolean, actual: True, expected: False }
  - { type: Boolean, actual: True, expected: 2 }
  - { type: Boolean, actual: "true", expected: False, cast_actual_to: bool }

  - { type: Integer, actual: 10 }
  - { type: Integer, actual: -10 }
  - { type: Integer, actual: a }

  - { type: IntegerBetween, actual: 12, min: 11, max: 13 }
  - { type: IntegerBetween, actual: 5, min: 11, max: 13 }
  - { type: IntegerBetween, actual: 15, min: 11, max: 13 }
  - { type: IntegerBetween, actual: "15", min: 11, max: 13 }
  - { type: IntegerBetween, actual: "12", min: 11, max: 13, cast_actual_to: int }

  - { type: IntegerGreater, actual: 12, other: 11 }
  - { type: IntegerGreater, actual: 5, other: 11 }
  - { type: IntegerGreater, actual: "15", other: 11 }
  - { type: IntegerGreater, actual: "12", other: 11, cast_actual_to: int }

  - { type: IntegerGreaterOrEqual, actual: 12, other: 12 }
  - { type: IntegerGreaterOrEqual, actual: 5, other: 11 }
  - { type: IntegerGreaterOrEqual, actual: "15", other: 15 }
  - { type: IntegerGreaterOrEqual, actual: "12", other: 15, cast_actual_to: int }
  - { type: IntegerGreaterOrEqual, actual: "16", other: 15, cast_actual_to: int }

  - { type: IntegerLess, actual: 12, other: 11 }
  - { type: IntegerLess, actual: 5, other: 11 }
  - { type: IntegerLess, actual: "12", other: 13, cast_actual_to: int }

  - { type: IntegerLessOrEqual, actual: 12, other: 12 }
  - { type: IntegerLessOrEqual, actual: 5, other: 11 }
  - { type: IntegerLessOrEqual, actual: "15", other: 15 }
  - { type: IntegerLessOrEqual, actual: "12", other: 15, cast_actual_to: int }
  - { type: IntegerLessOrEqual, actual: "16", other: 15, cast_actual_to: int }

  - { type: Float, actual: 10.0 }
  - { type: Float, actual: -10.00000000001 }
  - { type: Float, actual: a }

  - { type: FloatBetween, actual: 12.34, min: 11, max: 13 }
  - { type: FloatBetween, actual: 5.0, min: 11, max: 13 }
  - { type: FloatBetween, actual: 15.89, min: 11, max: 13 }
  - { type: FloatBetween, actual: "15.32", min: 11, max: 13 }
  - { type: FloatBetween, actual: "12.24", min: 11, max: 13, cast_actual_to: float }

  - { type: FloatGreater, actual: 12.0, other: 12 }
  - { type: FloatGreater, actual: 5.0, other: 13 }
  - { type: FloatGreater, actual: 15.89, other: 13 }
  - { type: FloatGreater, actual: "15.32", other: 13 }
  - { type: FloatGreater, actual: "13.24", other: 13, cast_actual_to: float }

  - { type: FloatGreaterOrEqual, actual: 12.0, other: 12 }
  - { type: FloatGreaterOrEqual, actual: 5.0, other: 11 }
  - { type: FloatGreaterOrEqual, actual: "15", other: 15 }
  - { type: FloatGreaterOrEqual, actual: "12.23", other: 15, cast_actual_to: float }
  - { type: FloatGreaterOrEqual, actual: "16.56", other: 15, cast_actual_to: float }

  - { type: FloatLess, actual: 12.9, other: 11.0 }
  - { type: FloatLess, actual: 5.0, other: 11.0 }
  - { type: FloatLess, actual: "12.3", other: 13.3 }
  - { type: FloatLess, actual: "12.3", other: 13.3, cast_actual_to: float }

#  - { type: AssertIsString, actual: "{$_response.body.coin.websiteUrl}" }
#  - { type: AssertStrContains, actual: 'https://someurl.com', expected: 'https' }
#  - { type: AssertStrContains, actual: '{"a": 1, "b": 2}', expected: '"b":' }
#  - { type: AssertIsFloat, actual: "{$_response.body.coin.priceChange1w}" }
#  - { type: AssertIsFloat, actual: 1.0 }
#  - { type: AssertIsBool, actual: "true" }
#  - { type: AssertIsBool, actual: true }
#  - { type: AssertIsMap, actual: "{$_response.body.coin}" }
#  - { type: AssertIsMap, actual: { 'a': 1, 'b': 2 } }
#  - { type: AssertMapHasKey, actual: { 'a': 1, 'b': 2 }, expected: 'a' }
#  - { type: AssertMapHasKey, actual: '{"a": 1, "b": 2}', expected: 'a' }
#  - { type: AssertMapDoNotHasKey, actual: { 'a': 1, 'b': 2 }, expected: 'c' }
#  - { type: AssertMapDoNotHasKey, actual: '{"a": 1, "b": 2}', expected: 'c' }
#  - { type: AssertMapHasKeys, actual: { 'a': 1, 'b': 2 }, expected: [ 'a' ] }
#  - { type: AssertMapHasKeys, actual: { 'a': 1, 'b': 2, 'c': 3 }, expected: [ 'a', 'b', 'c' ] }
#  - { type: AssertMapHasKeys, actual: '{"a": 1, "b": 2, "c": 3}', expected: [ 'a', 'b', 'c' ] }
#  - { type: AssertMapDoNotHasKeys, actual: { 'a': 1, 'b': 2, 'c': 3 }, expected: [ 'd', 'e', 'f' ] }
#  - { type: AssertMapDoNotHasKeys, actual: '{"a": 1, "b": 2, "c": 3}', expected: [ 'd', 'e', 'f' ] }
#  - { type: AssertMapExactKeys, actual: { 'a': 1, 'b': 2, 'c': 3 }, expected: [ 'a', 'b', 'c' ] }
#  - { type: AssertMapExactKeys, actual: '{"a": 1, "b": 2, "c": 3}', expected: [ 'a', 'b', 'c' ] }
#  - { type: AssertMapContains, actual: '{"a": 1, "b": 2, "c": 3}', expected: 1 }
#  - { type: AssertMapContains, actual: { "a": [ 1, 2 ], "b": [ 1, 3 ], "c": 3 }, expected: [ 1, 2 ] }
#  - { type: AssertMapContains, actual: { "a": { "foo": 1 }, "b": [ 1, 3 ], "c": 3 }, expected: { "foo": 1 } }
#  - { type: AssertMapKeyCount, actual: { 'a': 1, 'b': 2 }, expected: 2 }
#  - { type: AssertIsList, actual: "{$_response.body.coin.exp}" }
#  - { type: AssertIsList, actual: [ 1, 1, 2 ] }
#  - { type: AssertListContains, actual: [ 1, 1, 2 ], expected: 1 }
#  - { type: AssertListContains, actual: '[1, 1, 3]', expected: 1 }
#  - { type: AssertListContains, actual: [ { "foo": 1 }, { "bar": 2 } ], expected: { "foo": 1 } }
#  - { type: AssertListContains, actual: '[{"foo": 1}, {"car": 2}]', expected: { "foo": 1 } }
#  - { type: AssertListHasIndex, actual: [ 1, 1, 3 ], expected: 2 }
#  - { type: AssertListHasIndex, actual: '[1, 5, 3]', expected: 0 }
#  - { type: AssertCount, actual: "{$_response.body.coin.exp}", expected: 3 }
#  - { type: AssertGreater, actual: 1.2, expected: 0.5 }
#  - { type: AssertGreaterOrEqual, actual: 1.4, expected: 0.5 }
#  - { type: AssertLess, actual: 0.4, expected: 0.5 }
#  - { type: AssertLess, actual: '3', expected: 5 }
#  - { type: AssertLessOrEqual, actual: 0.4, expected: 0.5 }
#  - { type: AssertLessOrEqual, actual: 0.4, expected: 1 }
#  - { type: AssertLessOrEqual, actual: '3', expected: 5 }
#  - { type: AssertLessOrEqual, actual: 0.5, expected: 0.5 }
#  - { type: AssertLessOrEqual, actual: 5, expected: 5 }
#  - { type: AssertNotEqual, actual: "{$_response.body.coin.priceBtc}", expected: 2 }

expose:
  - "{{ _asserts_response }}"
